const express = require("express");
const adminRoute = express.Router();
const { authenticateAccessToken, isAdmin } = require("../Middleware/jwtAuth");
const uploadMiddleware = require("../Config/CloudinaryConfig");
const {
  getCourse,
  createCourse,
  deleteCourse,
  getEditCourse,
  updateCourse,
  getModules,
  addModule,
  deleteModule,
  getEditModule,
  updateModule,
  getLectures,
  addLecture,
  deleteLecture,
  getEditLecture,
  EditLecture,
  getModuleLecture,
  createSalesPage,
  GetSalesPage,
  updateSalesPage,
  createCheckout,
  getDigitalProduct,
  addDigitalProduct,
  deleteDigitalProduct,
  changeProductStatus,
  getEditProductDetails,
  UpdateProductDetails,
  CheckSalesPage,
  CheckCheckoutPage,
  GetEditCheckoutDetails,
  CheckThankoutPage,
  getEditThankyouPage,
  createThankyouPage,
  updateThankyouPage,
  getAllOrderBumps,
  CreateOrderBumps,
  GetEditOrderBump,
  UpdateOrderBump,
  DeleteOrderBump,
  CheckCheckoutPageforCourse,
  CheckSalesPageforCourse,
  CheckThankoutPageforCourse
} = require("../Controller/CourseController");

const {
  getContacts,
  addContact,
  deleteContact,
  addContactTag,
  getTags,
  addTag,
  deleteTag,
  getEditTag,
  editTag,
  removeContactTag,
  getRemovingTag,
  getEditContact,
  EditContact,
  getContactsDetails,
} = require("../Controller/CrmController");

const {
  getPayments,
  deleteTransaction,
  resendAccessCouseLink,
  dashboard,
} = require("../Controller/SaleController");

// Dashboard
adminRoute.get("/dashboard", dashboard);
// Get all courses...
adminRoute.get(
  "/assets/get-courses",
  authenticateAccessToken,
  isAdmin,
  getCourse
);
adminRoute.post(
  "/assets/add-course",
  authenticateAccessToken,
  isAdmin,
  uploadMiddleware,
  createCourse
);
adminRoute.delete(
  "/assets/delete-course/:Id",
  authenticateAccessToken,
  isAdmin,
  deleteCourse
);
adminRoute.get(
  "/assets/edit-course/:courseId",
  authenticateAccessToken,
  isAdmin,
  getEditCourse
);
adminRoute.put(
  "/assets/update-course/:courseId",
  authenticateAccessToken,
  isAdmin,
  uploadMiddleware,
  updateCourse
);

// Consistent route paths and middleware
adminRoute.get(
  "/assets/check-sales-page/course/:id",
  authenticateAccessToken,
  isAdmin,
  CheckSalesPageforCourse
);

adminRoute.get(
  "/assets/check-checkout-page/course/:id",
  authenticateAccessToken,
  isAdmin,
  CheckCheckoutPageforCourse
);

adminRoute.get(
  "/assets/check-thankyou-page/course/:id",
  authenticateAccessToken,
  isAdmin,
  CheckThankoutPageforCourse
);
//sales-page
adminRoute.get(
  "/assets/get-sales-page/:type/:id",
  authenticateAccessToken,
  GetSalesPage
);
adminRoute.post(
  "/create-sales-page/:type/:id",
  uploadMiddleware,
  authenticateAccessToken,
  isAdmin,
  createSalesPage
);
adminRoute.put(
  "/assets/update-sales-page/:type/:id",
  uploadMiddleware,
  authenticateAccessToken,
  isAdmin,
  updateSalesPage
);

//CHECKOUT
adminRoute.get(
  "/assets/file/check-checkout-page/:type/:id",
  authenticateAccessToken,
  isAdmin,
  CheckCheckoutPage
);

adminRoute.post(
  "/assets/create-checkout-page/:type/:id",
  uploadMiddleware,
  authenticateAccessToken,
  isAdmin,
  createCheckout
);

adminRoute.get(
  "/assets/get-checkout-page/:type/:id",
  authenticateAccessToken,
  isAdmin,
  GetEditCheckoutDetails
);

adminRoute.put(
  "/assets/update-checkout-page/:type/:id",
  uploadMiddleware,
  authenticateAccessToken,
  isAdmin,
  createCheckout
);

//THANK YOU PAGE
adminRoute.get(
  "/assets/file/check-thankyou-page/:type/:id",
  authenticateAccessToken,
  isAdmin,
  CheckThankoutPage
);
adminRoute.get(
  "/assets/get-edit-thankyou-page/:type/:id",
  authenticateAccessToken,
  isAdmin,
  getEditThankyouPage
);

adminRoute.post(
  "/assets/create-thankyou-page/:type/:id",
  authenticateAccessToken,
  isAdmin,
  createThankyouPage
);
adminRoute.put(
  "/assets/update-thankyou-page/:type/:id",
  authenticateAccessToken,
  isAdmin,
  updateThankyouPage
);

//Module...
adminRoute.get(
  "/assets/courses/get-modules/:courseId",
  authenticateAccessToken,
  isAdmin,
  getModules
);
adminRoute.post(
  "/assets/course/add-module/:courseId",
  authenticateAccessToken,
  isAdmin,
  addModule
);
adminRoute.delete(
  "/assets/courses/delete-module/:courseId/:moduleId",
  authenticateAccessToken,
  isAdmin,
  deleteModule
);
adminRoute.get(
  "/assets/course/edit-module/:courseId/:moduleId",
  authenticateAccessToken,
  isAdmin,
  getEditModule
);
adminRoute.put(
  "/assets/course/edit-module/:courseId/:moduleId",
  authenticateAccessToken,
  isAdmin,
  updateModule
);

//Lecture...
adminRoute.get(
  "/assets/courses/get-lectures/:courseId/:moduleId",
  authenticateAccessToken,
  isAdmin,
  getLectures
);
adminRoute.post(
  "/assets/courses/add-lecture/:courseId/:moduleId",
  authenticateAccessToken,
  isAdmin,
  uploadMiddleware,
  addLecture
);
adminRoute.delete(
  "/assets/courses/delete-lecture/:courseId/:moduleId/:lectureId",
  authenticateAccessToken,
  isAdmin,
  deleteLecture
);
adminRoute.get(
  "/assets/courses/get-lecture/:courseId/:moduleId/:lectureId",
  authenticateAccessToken,
  isAdmin,
  getEditLecture
);
adminRoute.put(
  "/assets/courses/edit-lecture/:courseId/:moduleId/:lectureId",
  authenticateAccessToken,
  isAdmin,
  uploadMiddleware,
  EditLecture
);

//View-Lectures...
adminRoute.get(
  "/assets/courses/watch-lecture/:courseId/:moduleId/:lectureIndex",
  authenticateAccessToken,
  isAdmin,
  getModuleLecture
);

//digital-product
adminRoute.get(
  "/assets/file/get-digital-products",
  authenticateAccessToken,
  isAdmin,
  getDigitalProduct
);
adminRoute.post(
  "/assets/file/add-digital-product",
  authenticateAccessToken,
  isAdmin,
  uploadMiddleware,
  addDigitalProduct
);
adminRoute.delete(
  "/assets/file/delete-digital-products/:productId",
  authenticateAccessToken,
  isAdmin,
  deleteDigitalProduct
);
adminRoute.patch(
  "/assets/file/digital-products/:id/status",
  authenticateAccessToken,
  isAdmin,
  changeProductStatus
);
adminRoute.get(
  "/assets/file/get-edit-digital-product/:productId",
  authenticateAccessToken,
  isAdmin,
  getEditProductDetails
);
adminRoute.put(
  "/assets/file/update-digital-product/:productId",
  authenticateAccessToken,
  isAdmin,
  uploadMiddleware,
  UpdateProductDetails
);

adminRoute.get(
  "/assets/file/check-sales-page/digital-product/:id",
  authenticateAccessToken,
  CheckSalesPage
);
//Contacts...
adminRoute.get(
  "/crm/contact/get-contacts",
  authenticateAccessToken,
  isAdmin,
  getContacts
);
adminRoute.get(
  "/get-contacts-details/:id",
  authenticateAccessToken,
  isAdmin,
  getContactsDetails
);
adminRoute.post(
  "/crm/contact/add-contact",
  authenticateAccessToken,
  isAdmin,
  addContact
);
adminRoute.delete(
  "/crm/contact/delete-contact",
  authenticateAccessToken,
  isAdmin,
  deleteContact
);
adminRoute.post(
  "/crm/contact/set-tag",
  authenticateAccessToken,
  isAdmin,
  addContactTag
);
adminRoute.get(
  "/crm/contact/:id",
  authenticateAccessToken,
  isAdmin,
  getRemovingTag
);
adminRoute.delete(
  "/crm/contact/remove-tag",
  authenticateAccessToken,
  isAdmin,
  removeContactTag
);
adminRoute.get(
  "/crm/contact/get-contact/:contactId",
  authenticateAccessToken,
  isAdmin,
  getEditContact
);
adminRoute.put(
  "/crm/contact/update-contact/:contactId",
  authenticateAccessToken,
  isAdmin,
  EditContact
);

//Tags...
adminRoute.get("/crm/tag/get-tags", authenticateAccessToken, isAdmin, getTags);
adminRoute.post("/crm/tag/add-tag", authenticateAccessToken, isAdmin, addTag);
adminRoute.get(
  "/crm/tag/get-edit-tag/:tagId",
  authenticateAccessToken,
  isAdmin,
  getEditTag
);
adminRoute.put(
  "/crm/tag/edit-tag/:tagId",
  authenticateAccessToken,
  isAdmin,
  editTag
);
adminRoute.delete(
  "/crm/tag/delete-tag/:tagId",
  authenticateAccessToken,
  isAdmin,
  deleteTag
);

//ORDER BUMP
adminRoute.get(
  "/assets/get-order-bumps",
  authenticateAccessToken,
  isAdmin,
  getAllOrderBumps
);
adminRoute.post(
  "/assets/create-order-bump",
  authenticateAccessToken,
  uploadMiddleware,
  isAdmin,
  CreateOrderBumps
);
adminRoute.get(
  "/assets/get-edit-order-bumps/:id",
  authenticateAccessToken,
  isAdmin,
  GetEditOrderBump
);
adminRoute.put(
  "/assets/update-order-bump/:id",
  uploadMiddleware,
  authenticateAccessToken,
  isAdmin,
  UpdateOrderBump
);
adminRoute.delete(
  "/assets/delete-order-bump/:id",
  authenticateAccessToken,
  isAdmin,
  DeleteOrderBump
);

//transaction
adminRoute.get("/payments", authenticateAccessToken, isAdmin, getPayments);
adminRoute.delete(
  "/sales/transaction/delete-transaction",
  authenticateAccessToken,
  isAdmin,
  deleteTransaction
);
adminRoute.post(
  "/sales/transaction/resend-transaction-mail",
  authenticateAccessToken,
  isAdmin,
  resendAccessCouseLink
);

module.exports = adminRoute;
